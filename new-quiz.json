[  
    {
        "subject": "Java: Generics",
        "question": "What is the primary reason this code fails to compile?",
        "code": "List<String> strList = new ArrayList<>();\nList<Object> objList = strList; // This line causes the error\nobjList.add(123); // This would corrupt the list\nString s = strList.get(0);",
        "options": [
            "The List interface does not support inheritance.",
            "Generics in Java are invariant, meaning List<String> is not a subtype of List<Object>.",
            "An ArrayList cannot be assigned to a List interface.",
            "Type erasure removes the type, so it should work."
        ],
        "reasons": [
            "Incorrect. The List interface is central to polymorphism in collections.",
            "Correct. This is a core principle of Java's type safety...",
            "Incorrect. This is a standard and valid use of polymorphism.",
            "Incorrect. Type erasure is the reason this is disallowed..."
        ],
        "correctAnswer": 1,
        "time": { "min": 60, "avg": 80 }
    }
] 